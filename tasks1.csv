page,number,description,task,code,feedback,hint_1,hint_2,answer_1,answer_2,reset
Introduction,1,Welcome to the P5.js tutorial. Today you will be learning the three main functions provided by this powerful library. <br>,,,,,,,,
Introduction,2,"First, let's learn the basic structure of P5.js.<br>
As you can see from the code area. All the codes in this function will only be executed once when the code is loaded. ",,"<b style=""color:#265eb7"">function</b> setup() {<br>
<br>
}
",,,,,,
Introduction,3,"""createCanvas"" is a function from the P5.js library, which allows you to define a canvas with a specific width and height over the screen.<br>
However, we defined the width and height here for you to fit the canvas window. Please do not modify these parameters.",,"<b style=""color:#265eb7"">function</b> setup() {<br>
&nbsp;&nbsp;createCanvas(width, height);<br>
}
",,,,,,
Introduction,4,All the codes in this function will be executed repeatedly. ,,"<b style=""color:#265eb7"">function</b> draw() {<br>
  <br>

}",,,,,,
Introduction,5,"""background"" defines the color of the current Canvas you created. <br>
","Now, please try to change 0 to another different value between 0 to 255. And then click ""Run"".","<b style=""color:#265eb7"">function</b> draw() {<br>
    &nbsp;&nbsp;background(0);<br>

}",,,,,,
Shape and Color,1,"Your first task will be creating different shapes on the graph.<br>
To create a shape, you should first specify the color of the shape. Here, we've provide you with a rectangle, but it has a default color.<br>
Use this function to set the color used to fill shapes. For example, if you run fill(204, 102, 0), all subsequent shapes will be filled with orange.","Please set the color to:<br>
red = 250 <br>
green = 60 <br>
blue = 60 <br>","fill(r, g, b);","Did you write the code in the ""draw"" function?","red corresponds to the first parameter.<br>
green corresponds to the second parameter.<br>
blue corresponds to the thrid parameter.","fill(250,60,60);","fill(250,60,60)",,shape1
Shape and Color,2,"Now you have successfully set the color, you can now draw the shapes on canvas.<br>
Use the following function to draw a rectangle to the screen. A rectangle is a four-sided shape with every angle at ninety degrees. <br>By default, the first two parameters set the location of the upper-left corner, the third sets the width, and the fourth sets the height.","Please add a rectangle with height 40 and width 30 at location (100,200).","rect(x, y, w, h);",Make sure you understand the meaning of each parameter in this function.,Use the formlua provided and fill in the four parameters as described by the task.,"rect(100,200,30,40);","rect(100,200,30,40)",,
Shape and Color,3,"Now Let's try a different color!<br>
Let's set the color first. Use the function below again.","Please set the color to:<br>
red = 60 <br>
green = 90 <br>
blue = 200 <br>","fill(r, g, b);",Did you overwrite the previous code?,"red corresponds to the first parameter.<br>
green corresponds to the second parameter.<br>
blue corresponds to the thrid parameter.","fill(60, 90, 200);","fill(60,90,200)",,reset
Shape and Color,4,"This function will draw an ellipse (oval) to the screen. An ellipse with equal width and height is a circle. <br>By default, the first two parameters set the location, and the third and fourth parameters set the shape's width and height. If no height is specified, the value of width is used for both the width and height. If a negative height or width is specified, the absolute value is taken.","Please draw a circle with width (diameter) 40 at location (50,50).","ellipse(x, y, w, h);",Make sure you understand the meaning of each parameter in this function.,Use the formlua provided and fill in the four parameters as described by the task.,"ellipse(50,50,40,40);","ellipse(50,50,40,40)","ellipse(50,50,40)",
Motion,1,"Now Let's learn a new effect that P5.js provides.<br>
We can not only draw still images over a screen. We can also make an object move.<br>
Here we provide you a basic structure of an object and it's position prefined.<br>
These two values define the x position and y position of an object.",,"<b style=""color:#265eb7"">var</b> x; <br>
<b style=""color:#265eb7"">var</b> y; <br>
",,,,,,motion1
Motion,2,"In function ""setup()"", we defined the initial value of the x and y position of this object.<br>
*Note: In P5.js, width and height are two pre-defined constant value which represents the width and height of the canvas.",,"  x = width / 2;<br>
  y = height - 10;",,,,,,
Motion,3,"In function ""draw()"", we defined our object - a circle with position x and y and radius 50.",,"fill(100); <br>
ellipse(x, y, 50, 50);",,,,,,
Motion,4,"In our current code segment. We did not change the value of x and y everytime we execute ""draw()"".<br>
However, we can change their value to make the object move!","Please try to modify the y position to make the circle moving up 1 pixel every time the function ""draw()"" is executed.","x = x; <br>
y = y;",,"To move the circle up, you should decrease the value of y until it reaches 0.",y = y - 1;,y=y-1,,
Motion,5,"Now let's try something harder!<br>
We would like to utilize the random function to change the x position of the circle.","Please modify the x position to make the ball moving left and right randomly within -1 and 1 each iteration the function ""draw()"" is executed.","random([min],[max]);",,The random function will generate a random floating-point number between the two parameters.,"x = x + random(-1,1);","x=x+random(-1,1)",,
Interaction,1,"Now, here's the final powerful module that P5.js provides. <br>
First, we pre-defined a circle in the middle of the screen with a diameter of 50.",,"<b style=""color:#265eb7"">var</b> x; <br>
<b style=""color:#265eb7"">var</b> y; <br>
<b style=""color:#265eb7"">var</b> r; <br>
x = width/2; <br>
y = height/2; <br>
r = 50; <br>",,,,,,interaction1
Interaction,2,"This <b>if-statement</b> needs to be modified to achieve interaction - so when we hover the index over the circle, the circle will tickle (moving randomly)",,"if(<b style=""color:#36047c"">false</b>){ <br>
&nbsp;&nbsp;x += random(-1, 1);<br>
&nbsp;&nbsp;y += random(-1, 1);<br>
}",,,,,,
Interaction,3,"P5.js library provides us with the ease to listen to the position of our index. <br>
So we can easily detect if we have hovered the mouse over an object as long as we have<br>
&nbsp&nbsp- the x and y position of an object <br>
&nbsp&nbsp- the x and y position of our index <br>","Please replace the false in the if-statement to <br>
mouseX >= x - r/2 && mouseX <= x + r/2",mouseX <br>,,Just copy and paste the code!,mouseX >= x - r/2 && mouseX <= x + r/2,mouseX>=x-r/2&&mouseX<=x+r/2,,
Interaction,4,"Now, hover your mouse over the circle.<br>
The circle is tickling! However, since we haven't detect the y position, the circle will still tickle even we hover the mouse above or below it. ",Please refine mouseY (the y position of your index) like what we just did for mouseX in the if-statement.,mouseY <br>,,"Since the object is a circle, the detection for mouseY should be exactly the same as for mouseX",mouseY >= y - r/2 && mouseY <= y + r/2,mouseX>=x-r/2&&mouseX<=x+r/2&&mouseY>=y-r/2&&mouseY<=y+r/2,,
Follow,1,"Here's the final toturial. And it is also the most complext part.<br>
For this section, you don't need to fully undersand how each line of code works. However, you need to understand the meaning of each function.",,,,,,,,follow1
Follow,2,"The code in function ""draw()"" calculate the position of the line and the angle that the line should incline.",,"<b style=""color:#265eb7"">function</b>  draw() {<br>
 &nbsp;&nbsp;background(0);<br>
 &nbsp;&nbsp; dx = mouseX - x;<br>
 &nbsp;&nbsp; dy = mouseY - y;<br>
 &nbsp;&nbsp; angle1 = atan2(dy, dx);<br>
 &nbsp;&nbsp; x = mouseX - (cos(angle1) * segLength);<br>
  &nbsp;&nbsp;y = mouseY - (sin(angle1) * segLength);<br>
 &nbsp;&nbsp; segment(x, y, angle1);<br>
}",,,,,,
Follow,3,"The code in function ""segment()"" draws the line. <br>
However, currently, we just keep drawing the line at position (0,0) which doesn't make sense.",,"<b style=""color:#265eb7"">function</b> segment() {<br>
  &nbsp;&nbsp; push();<br>
  &nbsp;&nbsp; line(0, 0, segLength, 0);<br>
  &nbsp;&nbsp; pop();<br>
}<br>",,,,,,
Follow,4,"To move an object, we have two ways to achieve it:<br>
&nbsp;&nbsp; - change the x and y position of the object<br>
&nbsp;&nbsp; - use the ""translate()"" function:
This function specifies an amount to displace objects within the display window. The x parameter specifies left/right translation, the y parameter specifies up/down translation. <br>
Transformations are cumulative and apply to everything that happens after and subsequent calls to the function accumulates the effect. For example, calling translate(50, 0) and then translate(20, 0) is the same as translate(70, 0). <b> *Note: If translate() is called within draw(), the transformation is reset when the loop begins again</b>. This function can be further controlled by using push() and pop().","Please add  translate to function ""segment()"" using the parameters provided.","translate(x, y);",,"translate(x, y);","translate(x, y);","translate(x,y)",,
Follow,5,"Now, the objects can follow our index!<br>
However, we need to utilize the rotation, otherwise the line will only be horizontal!<br>
The function below rotates a shape the amount specified by the angle parameter.","Please add  rotation to function ""segment()"" using the parameters provided.",rotate(angle);,,rotate(a);,rotate(a);,rotate(a),,
Final Test,1,"Congratulations on your completion on all the tutorials!<br>
Now Let's use all we've learned to create a interesting interaction effect!<br>
<a href=""test.html"" target=""_blank"">Click herel</a> to preview the final effects!
","Please use the frame we provided to complete the rest part. <br>
The comments with ""to do"" is the part that you will need to fill in. Make sure you understand the code first before trying to fill in your part.",,,,,,,test
